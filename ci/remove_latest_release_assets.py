import urllibimport jsonimport osGITHUB_URL = "https://api.github.com/"GITHUB_REPOSITORY = os.environ.get("GITHUB_REPOSITORY")GITHUB_TOKEN = os.environ.get("GITHUB_TOKEN")ASSET_NAME = os.environ.get("ASSET_NAME")RELEASE_TAG = os.environ.get("RELEASE_TAG", "latest")if not GITHUB_REPOSITORY:    raise Exception("Missing GITHUB_REPOSITORY")if not GITHUB_TOKEN:    raise Exception("Missing GITHUB_TOKEN")if not ASSET_NAME:    raise Exception("Missing ASSET_NAME")if not RELEASE_TAG:    print("Using default tag latest")LATEST_RELEASE_URL = f"{GITHUB_URL}/repos/{GITHUB_REPOSITORY}/releases/{RELEASE_TAG}"HEADERS = {    "AUTH_HEADER": f"Authorization: token ${GITHUB_TOKEN}"}def get_json(url, headers=[], method="GET"):    req = urllib.request.Request(url, headers=headers, method=method)    r = urllib.request.urlopen(req).read()    cont = json.loads(r.decode('utf-8'))        return cont    print("Finding release")latest_release = get_json(LATEST_RELEASE_URL, HEADERS)print("Getting assets url")assets_url = latest_release["assets_url"]print("Fetching assets")assets = get_json(assets_url, HEADERS)print("Searching asset")for asset in assets:    if asset["name"] == ASSET_NAME:        print("Found asset")        get_json(asset["url"], HEADERS, "DELETE")        print("Deleted!")        break